@using Mausam.Models

<div class="rounded-2xl bg-white p-6 shadow-sm">
    <h3 class="text-lg font-semibold text-slate-800 mb-4">Next 24 Hours</h3>
    
    @if (HourlyData != null)
    {
        <div class="overflow-x-auto">
            <div class="flex gap-3 min-w-max">
                @for (int i = 0; i < Math.Min(24, HourlyData.Time.Count); i++)
                {
                    var time = DateTime.Parse(HourlyData.Time[i]);
                    var temp = HourlyData.Temperature2m[i];
                    var weatherCode = HourlyData.WeatherCode[i];
                    var precipitation = HourlyData.Precipitation[i];
                    var windSpeed = HourlyData.WindSpeed10m[i];
                    var humidity = HourlyData.RelativeHumidity2m[i];
                    
                    <div class="flex flex-col items-center p-2 rounded-xl bg-slate-50 min-w-[60px] hover:bg-slate-100 transition-colors">
                        <div class="text-xs text-slate-600 font-medium">@time.ToString("HH:mm")</div>
                        <div class="my-2 text-xl">@GetWeatherIcon(weatherCode)</div>
                        <div class="text-sm font-semibold text-slate-900">@tempÂ°C</div>
                        <div class="text-xs text-slate-500 mt-1">
                            <div><i class="fas fa-wind text-xs"></i> @windSpeed km/h</div>
                            <div><i class="fas fa-tint text-xs"></i> @humidity%</div>
                            @if (precipitation > 0)
                            {
                                <div class="text-blue-600"><i class="fas fa-cloud-rain text-xs"></i> @precipitation mm</div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-8 text-slate-500">
            <i class="fas fa-chart-line text-4xl mb-2"></i>
            <div>Hourly forecast will appear here</div>
        </div>
    }
</div>

@code {
    [Parameter] public HourlyData? HourlyData { get; set; }

    private MarkupString GetWeatherIcon(int code)
    {
        var icons = new Dictionary<int, string>
        {
            [0] = "fas fa-sun text-yellow-500",
            [1] = "fas fa-cloud-sun text-yellow-400",
            [2] = "fas fa-cloud text-slate-400",
            [3] = "fas fa-cloud text-slate-500",
            [45] = "fas fa-smog text-slate-400",
            [48] = "fas fa-smog text-slate-500",
            [51] = "fas fa-cloud-rain text-blue-400",
            [53] = "fas fa-cloud-rain text-blue-500",
            [55] = "fas fa-cloud-rain text-blue-600",
            [61] = "fas fa-cloud-showers-heavy text-blue-500",
            [63] = "fas fa-cloud-showers-heavy text-blue-600",
            [65] = "fas fa-cloud-showers-heavy text-blue-700",
            [71] = "fas fa-snowflake text-blue-200",
            [73] = "fas fa-snowflake text-blue-300",
            [75] = "fas fa-snowflake text-blue-400",
            [77] = "fas fa-snowflake text-blue-500",
            [80] = "fas fa-cloud-showers-heavy text-blue-500",
            [81] = "fas fa-cloud-showers-heavy text-blue-600",
            [82] = "fas fa-cloud-showers-heavy text-blue-700",
            [85] = "fas fa-snowflake text-blue-400",
            [86] = "fas fa-snowflake text-blue-500",
            [95] = "fas fa-bolt text-yellow-500",
            [96] = "fas fa-bolt text-yellow-600",
            [99] = "fas fa-bolt text-yellow-700"
        };

        return new MarkupString($"<i class=\"{icons.GetValueOrDefault(code, "fas fa-question text-slate-400")}\"></i>");
    }
}
